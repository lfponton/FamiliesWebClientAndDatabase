@page "/AddAdult/{Id:int}"
@using Models
@using FamiliesManager.Data
@inject IAdultsService AdultsService
@inject NavigationManager NavigationManager
<h3>Add Adult</h3>
<AuthorizeView>
    <Authorized>
        <EditForm Model="@newAdult" OnValidSubmit="@AddNewAdult" Context="addAdultForm">
            <DataAnnotationsValidator/>
            <!-- ValidationSummary has the same name in AspNetCore and in Blazorise -->
            <Microsoft.AspNetCore.Components.Forms.ValidationSummary/>

            <div class="form-group">
                First Name:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.FirstName"/>
            </div>
            <div class="form-group">
                Last Name:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.LastName"/>
            </div>
            <div class="form-group">
                Hair Color:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.HairColor"/>
            </div>
            <div class="form-group">
                Eye Color:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.EyeColor"/>
            </div>
            <div class="form-group">
                Age:<br/>
                <InputNumber @bind-Value="newAdult.Age"/>
            </div>
            <div class="form-group">
                Height:<br/>
                <InputNumber @bind-Value="newAdult.Height"/>
            </div>
            <div class="form-group">
                Weight:<br/>
                <InputNumber @bind-Value="newAdult.Weight"/>
            </div>
            <div class="form-group">
                Sex:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.Sex"/>
            </div>
            <div class="form-group">
                JobTitle:<br/>
                <InputTextArea rows="1" @bind-Value="job.JobTitle"/>
            </div>
            <div class="form-group">
                Salary:<br/>
                <InputNumber @bind-Value="job.Salary"/>
            </div>
            <p class="actions">
                <button class="btn btn-outline-dark" type="submit">Add Adult</button>
            </p>
        </EditForm>
    </Authorized>
<NotAuthorized>
    <h3>Please log in to add adults.</h3>
</NotAuthorized>
</AuthorizeView>
@code {
    [Parameter]
    public int Id { get; set; }
    private Adult newAdult = new Adult();
    private Job job = new Job();

    private async Task AddNewAdult()
    {
        newAdult.Job = job;
        await AdultsService.AddAdultAsync(Id, newAdult);
        NavigationManager.NavigateTo($"/ViewFamily/{Id}");
    }

}